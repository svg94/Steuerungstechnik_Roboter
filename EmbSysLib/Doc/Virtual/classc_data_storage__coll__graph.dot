digraph "cDataStorage"
{
  edge [fontname="Sans",fontsize="8",labelfontname="Sans",labelfontsize="8"];
  node [fontname="Sans",fontsize="8",shape=record];
  Node1 [label="{cDataStorage\n|+ error\l|+ cDataStorage()\l+ readHeader()\l+ writeHeader()\l+ find()\l+ open()\l+ create()\l+ read()\l+ write()\l+ reorganize()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node2 -> Node1 [color="grey25",fontsize="8",style="solid",label=" +mem" ,arrowhead="odiamond",fontname="Sans"];
  Node2 [label="{cHwMemory\n|# size\l# def\l# isFlashFlag\l|+ unlock()\l+ lock()\l+ write()\l+ read()\l+ clear()\l+ getSize()\l+ isFlash()\l# cHwMemory()\l# writeByte()\l# readByte()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classc_hw_memory.html",tooltip="Abstract class supporting non volatile memory. "];
  Node3 -> Node1 [color="grey25",fontsize="8",style="solid",label=" +crcCalulator" ,arrowhead="odiamond",fontname="Sans"];
  Node3 [label="{cCRC\n||+ cCRC()\l+ ~cCRC()\l+ operator()()\l+ operator()()\l+ get()\l+ reset()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classc_c_r_c.html",tooltip="16 bit cyclic redundancy check (CRC) calculation. "];
  Node4 -> Node1 [color="grey25",fontsize="8",style="solid",label=" +rhList" ,arrowhead="odiamond",fontname="Sans"];
  Node4 [label="{cList\n||+ cList()\l+ add()\l+ updateAll()\l+ getFirst()\l+ operator[]()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classc_list.html",tooltip="Base class for single linked lists. "];
}
