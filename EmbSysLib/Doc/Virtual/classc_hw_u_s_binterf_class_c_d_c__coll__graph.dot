digraph "cHwUSBinterfClassCDC"
{
  edge [fontname="Sans",fontsize="8",labelfontname="Sans",labelfontsize="8"];
  node [fontname="Sans",fontsize="8",shape=record];
  Node1 [label="{cHwUSBinterfClassCDC\n|+ dataBuf\l+ dataBufTX\l+ isInProgress\l|+ cHwUSBinterfClassCDC()\l+ transmit()\l+ transmitCtrl()\l+ receive()\l+ receiveCtrl()\l+ requestCtrlIN()\l+ requestCtrlOUT()\l+ request()\l+ get()\l+ set()\l+ set()\l+ set()\l+ getByte()\l+ setByte()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="8",style="solid",arrowtail="onormal",fontname="Sans"];
  Node2 [label="{cHwUSBinterf\n|# configId\l# interfId\l|+ cHwUSBinterf()\l# transmit()\l# request()\l# requestCtrlIN()\l# requestCtrlOUT()\l# receive()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classc_hw_u_s_binterf.html"];
  Node3 -> Node2 [color="grey25",fontsize="8",style="solid",label=" #usb" ,arrowhead="odiamond",fontname="Sans"];
  Node3 [label="{cHwUSB\n||+ start()\l# cHwUSB()\l# eventHandler()\l# reset()\l# configure()\l# setAddress()\l# configEP()\l# setStallEP()\l# clrStallEP()\l# readEP()\l# writeEP()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classc_hw_u_s_b.html",tooltip="Abstract interface to USB hardware. "];
  Node4 -> Node3 [color="grey25",fontsize="8",style="solid",label=" #desc" ,arrowhead="odiamond",fontname="Sans"];
  Node4 [label="{cHwUSBdesc\n||+ getMaxPacketSize0()\l# getDescriptor()\l# registerEndpoint()\l# getEndpoint()\l# registerInterface()\l# getInterface()\l# getDescriptorDevice()\l# getDescriptorConfig()\l# getDescriptorInterface()\l# getDescriptorEndpoint()\l# getDescriptorHID()\l# getDescriptorHIDreport()\l# getDescriptorString()\l# getConfigDeviceStatus()\l# getId()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classc_hw_u_s_bdesc.html",tooltip="Abstract base class for USB descriptor. "];
  Node5 -> Node3 [color="grey25",fontsize="8",style="solid",label=" #epCtrl" ,arrowhead="odiamond",fontname="Sans"];
  Node5 [label="{cHwUSBctrl\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classc_hw_u_s_bctrl.html",tooltip="Control Endpoint (IN and OUT) "];
  Node6 -> Node2 [color="grey25",fontsize="8",style="solid",label=" #epIN\n#epOUT" ,arrowhead="odiamond",fontname="Sans"];
  Node6 [label="{cHwUSBendpoint\n||+ writeData()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classc_hw_u_s_bendpoint.html",tooltip="Endpoint. "];
  Node7 -> Node1 [dir="back",color="midnightblue",fontsize="8",style="solid",arrowtail="onormal",fontname="Sans"];
  Node7 [label="{cHwUART\n|# txReady\l|+ set()\l+ set()\l+ set()\l+ isTxBufferFull()\l+ get()\l+ isrRx()\l+ isrTx()\l# cHwUART()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classc_hw_u_a_r_t.html",tooltip="Abstract class supporting the UART hardware. "];
  Node8 -> Node7 [color="grey25",fontsize="8",style="solid",label=" #dataTxBuf\n#dataRxBuf" ,arrowhead="odiamond",fontname="Sans"];
  Node8 [label="{cFifo\< BYTE \>\n||+ cFifo()\l+ isFull()\l+ isEmpty()\l+ getCount()\l+ getSize()\l+ operator\<\<()\l+ operator\>\>()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classc_fifo.html"];
  Node9 -> Node8 [dir="back",color="orange",fontsize="8",style="solid",label=" \< BYTE \>" ,fontname="Sans"];
  Node9 [label="{cFifo\< T \>\n||+ cFifo()\l+ isFull()\l+ isEmpty()\l+ getCount()\l+ getSize()\l+ operator\<\<()\l+ operator\>\>()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classc_fifo.html",tooltip="First-In-First-Out memory. "];
  Node10 -> Node1 [color="grey25",fontsize="8",style="solid",label=" +CDC_Interface" ,arrowhead="odiamond",fontname="Sans"];
  Node10 [label="{cHwUSBinterfClassCDC\l::cInterface\n||+ cInterface()\l+ transmit()\l+ transmitCtrl()\l+ receive()\l+ receiveCtrl()\l+ requestCtrlIN()\l+ requestCtrlOUT()\l+ request()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classc_hw_u_s_binterf_class_c_d_c_1_1c_interface.html"];
  Node2 -> Node10 [dir="back",color="midnightblue",fontsize="8",style="solid",arrowtail="onormal",fontname="Sans"];
}
