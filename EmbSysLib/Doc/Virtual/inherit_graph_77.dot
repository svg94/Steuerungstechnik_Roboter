digraph "Graphical Class Hierarchy"
{
  edge [fontname="Sans",fontsize="8",labelfontname="Sans",labelfontsize="8"];
  node [fontname="Sans",fontsize="8",shape=record];
  rankdir="LR";
  Node1 [label="cDevAnalog",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classc_dev_analog.html",tooltip="Access to analog I/O devices. "];
  Node1 -> Node2 [dir="back",color="midnightblue",fontsize="8",style="solid",fontname="Sans"];
  Node2 [label="cDevAnalogIn",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classc_dev_analog_in.html",tooltip="Abstract class for analog input devices. "];
  Node2 -> Node3 [dir="back",color="midnightblue",fontsize="8",style="solid",fontname="Sans"];
  Node3 [label="cDevAnalogInADC",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classc_dev_analog_in_a_d_c.html",tooltip="Analog input device, using cHwADC. "];
  Node1 -> Node4 [dir="back",color="midnightblue",fontsize="8",style="solid",fontname="Sans"];
  Node4 [label="cDevAnalogOut",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classc_dev_analog_out.html",tooltip="Abstract class for analog output devices. "];
  Node4 -> Node5 [dir="back",color="midnightblue",fontsize="8",style="solid",fontname="Sans"];
  Node5 [label="cDevAnalogOutDAC",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classc_dev_analog_out_d_a_c.html",tooltip="Analog input device, using cHwDAC. "];
  Node4 -> Node6 [dir="back",color="midnightblue",fontsize="8",style="solid",fontname="Sans"];
  Node6 [label="cDevAnalogOutPWM",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classc_dev_analog_out_p_w_m.html",tooltip="Analog output device (PWM), using cHwTimer. "];
  Node4 -> Node7 [dir="back",color="midnightblue",fontsize="8",style="solid",fontname="Sans"];
  Node7 [label="cDevAnalogOutPWMemul",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classc_dev_analog_out_p_w_memul.html",tooltip="Analog output device (PWM), using emulated PWM. "];
  Node8 [label="cHwEncoder",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classc_hw_encoder.html",tooltip="Abstract class supporting a quadratur encoder. "];
  Node8 -> Node9 [dir="back",color="midnightblue",fontsize="8",style="solid",fontname="Sans"];
  Node9 [label="cHwEncoder_Emul",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classc_hw_encoder___emul.html"];
  Node10 [label="cHwPort",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classc_hw_port.html",tooltip="Abstract class supporting general purpose I/O hardware. "];
  Node10 -> Node11 [dir="back",color="midnightblue",fontsize="8",style="solid",fontname="Sans"];
  Node11 [label="cHwPort_PCF8574",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classc_hw_port___p_c_f8574.html",tooltip="Implementation of the digital port expander PCF8574 (I2C-device) "];
  Node10 -> Node12 [dir="back",color="midnightblue",fontsize="8",style="solid",fontname="Sans"];
  Node12 [label="cHwPort_Terminal",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classc_hw_port___terminal.html",tooltip="Digital I/O terminal. "];
  Node10 -> Node13 [dir="back",color="midnightblue",fontsize="8",style="solid",fontname="Sans"];
  Node13 [label="cHwPort_Virtual",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classc_hw_port___virtual.html",tooltip="Implementation of a digital I/O interface. "];
  Node14 [label="cHwUART",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classc_hw_u_a_r_t.html",tooltip="Abstract class supporting the UART hardware. "];
  Node14 -> Node15 [dir="back",color="midnightblue",fontsize="8",style="solid",fontname="Sans"];
  Node15 [label="cHwUART_File",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classc_hw_u_a_r_t___file.html",tooltip="Emulate an UART interface by file read/write. "];
  Node14 -> Node16 [dir="back",color="midnightblue",fontsize="8",style="solid",fontname="Sans"];
  Node16 [label="cHwUART_IPclient\< T \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classc_hw_u_a_r_t___i_pclient.html"];
  Node14 -> Node17 [dir="back",color="midnightblue",fontsize="8",style="solid",fontname="Sans"];
  Node17 [label="cHwUART_IPserver\< T \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classc_hw_u_a_r_t___i_pserver.html"];
  Node14 -> Node18 [dir="back",color="midnightblue",fontsize="8",style="solid",fontname="Sans"];
  Node18 [label="cHwUART_MCU",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classc_hw_u_a_r_t___m_c_u.html"];
  Node14 -> Node19 [dir="back",color="midnightblue",fontsize="8",style="solid",fontname="Sans"];
  Node19 [label="cHwUART_Serial",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classc_hw_u_a_r_t___serial.html"];
  Node14 -> Node20 [dir="back",color="midnightblue",fontsize="8",style="solid",fontname="Sans"];
  Node20 [label="cHwUART_Stdio",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classc_hw_u_a_r_t___stdio.html",tooltip="Emulate an UART/Terminal interface by stdin/stdout. "];
  Node14 -> Node21 [dir="back",color="midnightblue",fontsize="8",style="solid",fontname="Sans"];
  Node21 [label="cHwUSBinterfClassCDC",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classc_hw_u_s_binterf_class_c_d_c.html"];
  Node22 [label="cHwUSBinterf",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classc_hw_u_s_binterf.html"];
  Node22 -> Node21 [dir="back",color="midnightblue",fontsize="8",style="solid",fontname="Sans"];
  Node22 -> Node23 [dir="back",color="midnightblue",fontsize="8",style="solid",fontname="Sans"];
  Node23 [label="cHwUSBinterfClassCDC\l::cInterface",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classc_hw_u_s_binterf_class_c_d_c_1_1c_interface.html"];
  Node22 -> Node24 [dir="back",color="midnightblue",fontsize="8",style="solid",fontname="Sans"];
  Node24 [label="cHwUSBinterfClassHID",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classc_hw_u_s_binterf_class_h_i_d.html"];
  Node22 -> Node25 [dir="back",color="midnightblue",fontsize="8",style="solid",fontname="Sans"];
  Node25 [label="cUSBinterfClassVSC\l\< IN_T, OUT_T \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classc_u_s_binterf_class_v_s_c.html",tooltip="Template class supporting USB communication as vendor specific class (VSC) "];
  Node22 -> Node26 [dir="back",color="midnightblue",fontsize="8",style="solid",fontname="Sans"];
  Node26 [label="cUSBinterfClassVSC\l\< cISC::DATA, cISC::\lDATA \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classc_u_s_binterf_class_v_s_c.html"];
  Node26 -> Node27 [dir="back",color="midnightblue",fontsize="8",style="solid",fontname="Sans"];
  Node27 [label="cISC_USBdevice",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classc_i_s_c___u_s_bdevice.html",tooltip="ISC transport class with USB hardware. "];
  Node28 [label="cISC",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classc_i_s_c.html",tooltip="ISC transport base class. "];
  Node28 -> Node29 [dir="back",color="midnightblue",fontsize="8",style="solid",fontname="Sans"];
  Node29 [label="cISC_TCP",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classc_i_s_c___t_c_p.html",tooltip="ISC transport class with TCP. "];
  Node28 -> Node30 [dir="back",color="midnightblue",fontsize="8",style="solid",fontname="Sans"];
  Node30 [label="cISC_UART",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classc_i_s_c___u_a_r_t.html",tooltip="ISC transport class with UART hardware. "];
  Node28 -> Node31 [dir="back",color="midnightblue",fontsize="8",style="solid",fontname="Sans"];
  Node31 [label="cISC_UDP",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classc_i_s_c___u_d_p.html",tooltip="ISC transport class with UDP. "];
  Node28 -> Node27 [dir="back",color="midnightblue",fontsize="8",style="solid",fontname="Sans"];
  Node28 -> Node32 [dir="back",color="midnightblue",fontsize="8",style="solid",fontname="Sans"];
  Node32 [label="cISC_USBhost",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classc_i_s_c___u_s_bhost.html",tooltip="... "];
  Node33 [label="cList::Item",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classc_list_1_1_item.html",tooltip="Base class for list items. "];
  Node33 -> Node34 [dir="back",color="firebrick4",fontsize="8",style="solid",fontname="Sans"];
  Node34 [label="cCmdPara",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classc_cmd_para.html",tooltip="Abstract class defining a command parameter. "];
  Node34 -> Node35 [dir="back",color="midnightblue",fontsize="8",style="solid",fontname="Sans"];
  Node35 [label="cCmdParaType\< T \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classc_cmd_para_type.html",tooltip="Template class to define a parameter with basic data types. "];
  Node34 -> Node36 [dir="back",color="midnightblue",fontsize="8",style="solid",fontname="Sans"];
  Node36 [label="cCmdParaType\< BYTE \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classc_cmd_para_type.html"];
  Node36 -> Node37 [dir="back",color="midnightblue",fontsize="8",style="solid",fontname="Sans"];
  Node37 [label="cCmdParaEvent",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classc_cmd_para_event.html",tooltip="EVENT parameter. "];
  Node36 -> Node38 [dir="back",color="midnightblue",fontsize="8",style="solid",fontname="Sans"];
  Node38 [label="cCmdParaList",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classc_cmd_para_list.html",tooltip="Parameter with a list of values. "];
  Node34 -> Node39 [dir="back",color="midnightblue",fontsize="8",style="solid",fontname="Sans"];
  Node39 [label="cCmdParaType\< const\l char * \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classc_cmd_para_type.html"];
  Node39 -> Node40 [dir="back",color="midnightblue",fontsize="8",style="solid",fontname="Sans"];
  Node40 [label="cCmdParaString",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classc_cmd_para_string.html",tooltip="String parameter. "];
  Node33 -> Node41 [dir="back",color="midnightblue",fontsize="8",style="solid",fontname="Sans"];
  Node41 [label="cDataStorage::RecordHandler",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classc_data_storage_1_1_record_handler.html"];
  Node33 -> Node7 [dir="back",color="firebrick4",fontsize="8",style="solid",fontname="Sans"];
  Node33 -> Node42 [dir="back",color="midnightblue",fontsize="8",style="solid",fontname="Sans"];
  Node42 [label="cDevControlEncoder",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classc_dev_control_encoder.html"];
  Node42 -> Node43 [dir="back",color="midnightblue",fontsize="8",style="solid",fontname="Sans"];
  Node43 [label="cDevControlEncoderJoystick",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classc_dev_control_encoder_joystick.html"];
  Node42 -> Node44 [dir="back",color="midnightblue",fontsize="8",style="solid",fontname="Sans"];
  Node44 [label="cDevControlEncoderRotaryKnob",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classc_dev_control_encoder_rotary_knob.html"];
  Node33 -> Node45 [dir="back",color="midnightblue",fontsize="8",style="solid",fontname="Sans"];
  Node45 [label="cDevDigitalIndicator",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classc_dev_digital_indicator.html",tooltip="... "];
  Node33 -> Node46 [dir="back",color="midnightblue",fontsize="8",style="solid",fontname="Sans"];
  Node46 [label="cDownload::Interface",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classc_download_1_1_interface.html",tooltip="Connecting a memory area with download. "];
  Node33 -> Node47 [dir="back",color="midnightblue",fontsize="8",style="solid",fontname="Sans"];
  Node47 [label="cHTTP_Page",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classc_h_t_t_p___page.html"];
  Node33 -> Node48 [dir="back",color="firebrick4",fontsize="8",style="solid",fontname="Sans"];
  Node48 [label="cHTTP_Para",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classc_h_t_t_p___para.html",tooltip="Abstract class defining a command parameter. "];
  Node48 -> Node49 [dir="back",color="midnightblue",fontsize="8",style="solid",fontname="Sans"];
  Node49 [label="cHTTP_ParaFunction",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classc_h_t_t_p___para_function.html",tooltip="... "];
  Node48 -> Node50 [dir="back",color="midnightblue",fontsize="8",style="solid",fontname="Sans"];
  Node50 [label="cHTTP_ParaType\< T \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classc_h_t_t_p___para_type.html",tooltip="Template class to define a parameter with basic data types. "];
  Node48 -> Node51 [dir="back",color="midnightblue",fontsize="8",style="solid",fontname="Sans"];
  Node51 [label="cHTTP_ParaType\< BYTE \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classc_h_t_t_p___para_type.html"];
  Node51 -> Node52 [dir="back",color="midnightblue",fontsize="8",style="solid",fontname="Sans"];
  Node52 [label="cHTTP_ParaEvent",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classc_h_t_t_p___para_event.html",tooltip="Parameter with a list of values. "];
  Node51 -> Node53 [dir="back",color="midnightblue",fontsize="8",style="solid",fontname="Sans"];
  Node53 [label="cHTTP_ParaOption",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classc_h_t_t_p___para_option.html",tooltip="Template class to define a parameter with basic data types. "];
  Node48 -> Node54 [dir="back",color="midnightblue",fontsize="8",style="solid",fontname="Sans"];
  Node54 [label="cHTTP_ParaType\< const\l char * \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classc_h_t_t_p___para_type.html"];
  Node54 -> Node55 [dir="back",color="midnightblue",fontsize="8",style="solid",fontname="Sans"];
  Node55 [label="cHTTP_ParaString",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classc_h_t_t_p___para_string.html",tooltip="String parameter. "];
  Node33 -> Node56 [dir="back",color="midnightblue",fontsize="8",style="solid",fontname="Sans"];
  Node56 [label="cHwADC",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classc_hw_a_d_c.html",tooltip="Abstract class supporting the analog to digital converter (ADC) "];
  Node56 -> Node57 [dir="back",color="midnightblue",fontsize="8",style="solid",fontname="Sans"];
  Node57 [label="cHwADC_Virtual",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classc_hw_a_d_c___virtual.html",tooltip="Implementation of the analg to digital converter (ADC) "];
  Node33 -> Node9 [dir="back",color="firebrick4",fontsize="8",style="solid",fontname="Sans"];
  Node33 -> Node11 [dir="back",color="firebrick4",fontsize="8",style="solid",fontname="Sans"];
  Node33 -> Node12 [dir="back",color="firebrick4",fontsize="8",style="solid",fontname="Sans"];
  Node33 -> Node58 [dir="back",color="midnightblue",fontsize="8",style="solid",fontname="Sans"];
  Node58 [label="cISC::DataInterface",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classc_i_s_c_1_1_data_interface.html"];
  Node58 -> Node59 [dir="back",color="firebrick4",fontsize="8",style="solid",fontname="Sans"];
  Node59 [label="cISC::Data\< T, ID \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classc_i_s_c_1_1_data.html"];
  Node58 -> Node60 [dir="back",color="firebrick4",fontsize="8",style="solid",fontname="Sans"];
  Node60 [label="cISC::Data\< Image,\l 254 \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classc_i_s_c_1_1_data.html"];
  Node58 -> Node61 [dir="back",color="firebrick4",fontsize="8",style="solid",fontname="Sans"];
  Node61 [label="cISC::Data\< Reply,\l 255 \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classc_i_s_c_1_1_data.html"];
  Node33 -> Node62 [dir="back",color="midnightblue",fontsize="8",style="solid",fontname="Sans"];
  Node62 [label="cJSONpair",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classc_j_s_o_npair.html"];
  Node33 -> Node63 [dir="back",color="midnightblue",fontsize="8",style="solid",fontname="Sans"];
  Node63 [label="cJSONvalue",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classc_j_s_o_nvalue.html"];
  Node63 -> Node64 [dir="back",color="midnightblue",fontsize="8",style="solid",fontname="Sans"];
  Node64 [label="cJSONboolean",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classc_j_s_o_nboolean.html"];
  Node63 -> Node65 [dir="back",color="midnightblue",fontsize="8",style="solid",fontname="Sans"];
  Node65 [label="cJSONcontainer",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classc_j_s_o_ncontainer.html"];
  Node65 -> Node66 [dir="back",color="midnightblue",fontsize="8",style="solid",fontname="Sans"];
  Node66 [label="cJSONarray",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classc_j_s_o_narray.html"];
  Node65 -> Node67 [dir="back",color="midnightblue",fontsize="8",style="solid",fontname="Sans"];
  Node67 [label="cJSONobject",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classc_j_s_o_nobject.html"];
  Node63 -> Node68 [dir="back",color="midnightblue",fontsize="8",style="solid",fontname="Sans"];
  Node68 [label="cJSONnumber\< T, p \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classc_j_s_o_nnumber.html"];
  Node63 -> Node69 [dir="back",color="midnightblue",fontsize="8",style="solid",fontname="Sans"];
  Node69 [label="cJSONstring",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classc_j_s_o_nstring.html"];
  Node33 -> Node70 [dir="back",color="midnightblue",fontsize="8",style="solid",fontname="Sans"];
  Node70 [label="cNetApplication",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classc_net_application.html"];
  Node70 -> Node71 [dir="back",color="midnightblue",fontsize="8",style="solid",fontname="Sans"];
  Node71 [label="cHTTP",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classc_h_t_t_p.html",tooltip="??? "];
  Node70 -> Node16 [dir="back",color="midnightblue",fontsize="8",style="solid",fontname="Sans"];
  Node70 -> Node17 [dir="back",color="midnightblue",fontsize="8",style="solid",fontname="Sans"];
  Node70 -> Node29 [dir="back",color="midnightblue",fontsize="8",style="solid",fontname="Sans"];
  Node70 -> Node31 [dir="back",color="midnightblue",fontsize="8",style="solid",fontname="Sans"];
  Node70 -> Node72 [dir="back",color="midnightblue",fontsize="8",style="solid",fontname="Sans"];
  Node72 [label="cNetDHCP",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classc_net_d_h_c_p.html"];
  Node33 -> Node73 [dir="back",color="midnightblue",fontsize="8",style="solid",fontname="Sans"];
  Node73 [label="cNetTransport::Socket",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classc_net_transport_1_1_socket.html"];
  Node73 -> Node74 [dir="back",color="midnightblue",fontsize="8",style="solid",fontname="Sans"];
  Node74 [label="cNetTCP::Socket",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classc_net_t_c_p_1_1_socket.html"];
  Node73 -> Node75 [dir="back",color="midnightblue",fontsize="8",style="solid",fontname="Sans"];
  Node75 [label="cNetUDP::Socket",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classc_net_u_d_p_1_1_socket.html"];
  Node73 -> Node76 [dir="back",color="midnightblue",fontsize="8",style="solid",fontname="Sans"];
  Node76 [label="cNetWinTransport::Socket",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classc_net_win_transport_1_1_socket.html"];
  Node76 -> Node74 [dir="back",color="midnightblue",fontsize="8",style="solid",fontname="Sans"];
  Node76 -> Node75 [dir="back",color="midnightblue",fontsize="8",style="solid",fontname="Sans"];
  Node33 -> Node77 [dir="back",color="midnightblue",fontsize="8",style="solid",fontname="Sans"];
  Node77 [label="cTaskHandler",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classc_task_handler.html"];
  Node33 -> Node78 [dir="back",color="midnightblue",fontsize="8",style="solid",fontname="Sans"];
  Node78 [label="cTaskHandler::Task",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classc_task_handler_1_1_task.html",tooltip="Base class for tasks. "];
}
